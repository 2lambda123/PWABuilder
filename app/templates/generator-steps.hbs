<ul class="pwa-generator-tabs">
  {{#each step in steps}}
    {{#generator-tab step=step.step}}
      <a class="pwa-generator-tab_action">{{step.stepTitle}}</a>
    {{/generator-tab}}
  {{/each}}
</ul>
<ul class="generator-step-list">
  {{#generator-step step="1" nextStep="2" stepTitle="Generate Manifest" data=model action="updateStep" showNextStep=startComplete}}
  {{#if startComplete}}
  <div class="pwa-generator-semipadded pure-g">
    <div class="pwa-generator-form pure-u-1 pure-u-md-1-2">
      <h4  class="pwa-generator-subtitle">
        Here are the values we picked up from your site.
      </h4>
      <h4  class="pwa-generator-subtitle pwa-generator-subtitle--last">
        Update or add any details below.
      </h4>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Name</label>
        {{input class='pwa-generator-input' value=model.manifest.name focus-out="updateModel"}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Short Name</label>
        {{input class='pwa-generator-input' name="short_name" value=model.manifest.short_name focus-out="updateModel"}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Description</label>
        {{input class='pwa-generator-input' name="description" value=model.manifest.description focus-out="updateModel"}}
      </div>
      <div class="pwa-generator-field logo-upload">
        <label class="pwa-generator-label">Icon Url</label>
        {{logo-upload action="updateLogos" generateMissingImageAction="addUploadedImage" deleteAssetsAction="deleteAssets" logos=model.manifest.icons baseUrl=model.manifest.start_url hasAssets=model.hasAssets}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Scope</label>
        {{input class='pwa-generator-input' value=model.manifest.scope focus-out="updateModel"}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Start Url</label>
        {{input class='pwa-generator-input' value=model.manifest.start_url focus-out="updateModel"}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Display</label>
        {{generator-select class='pwa-generator-input pwa-generator-input--select' content=model.display.names modelProperty="manifest.display" value=model.manifest.display}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Orientation</label>
        {{generator-select class='pwa-generator-input pwa-generator-input--select' content=model.orientation.names modelProperty="manifest.orientation" value=model.manifest.orientation}}
      </div>
      <div class="pwa-generator-field">
        <label class="pwa-generator-label">Language</label>
        {{generator-select class='pwa-generator-input pwa-generator-input--select' content=model.languages
                optionLabelPath="content.name"
                optionValuePath="content.code"
                modelProperty="manifest.lang" 
                value=model.manifest.lang
                selectionProperty="code"
                }}
      </div>
      {{#background-color color=model.manifest.background_color action="updateModelProperty"}} {{/background-color}}
      <h4 class="pwa-generator-subtitle pwa-generator-subtitle--toggleable" {{action "toggleRelatedApps"}}>Specify related applications to be added to the manifest.</h4>
      {{#if showRelatedApps}}
      <div class="pwa-generator-field">
        {{#related-application-list action="updateModelProperty" preferRelatedApplications=model.manifest.prefer_related_applications relatedApplications=model.manifest.related_applications }}{{/related-application-list}}
      </div>
      {{/if}}

      <h4 class="pwa-generator-subtitle pwa-generator-subtitle--toggleable" {{action "toggleCustomMembers"}}>Specify custom members to be added to the manifest.</h4>
      {{#if showCustomMembers}}
      <div class="pwa-generator-field">
        {{#member-list action="manageMember" members=customMembers}}{{/member-list}}
      </div>
      {{/if}}
    </div>
    <div class="pure-u-1 pure-u-md-1-2 generator-section manifest manifest-holder" id="manifest_holder">
      <header>
        <h2 class="generator-section-title">W3C Manifest{{#if isProcessing}} {{fa-icon "circle-o-notch fa-spin"}}{{/if}}</h2>
        <p class="generator-issues-notification">
          {{#skip-link class="pwa-button pwa-button--simple" anchor="#warnings_list"}}Warnings ({{model.warningsTotal}}){{/skip-link}}
          {{#skip-link class="pwa-button pwa-button--simple" anchor="#suggestions_list"}}Suggestions ({{model.suggestionsTotal}}){{/skip-link}}
        </p>
      </header>
      {{partial "generator-preview"}}
    </div>
  </div>
  {{else}}
    {{#generator-start isSaving=model.isSaving action="startComplete" class="generator-start step"}}{{/generator-start}}
  {{/if}}
  {{/generator-step}}

  {{#generator-step step="2" nextStep="3" stepTitle="Build Service Worker" data=model action="updateStep" showNextStep=startComplete}}
  <div class="pwa-generator-semipadded pure-g">
    <div class="pure-u-1 pure-u-md-1-2 generator-section service-workers">
      <p class="pwa-generator-subtitle">Select the service worker functionality for your app.</p>
      {{#each worker in model.serviceWorkers}}
        <div class="pwa-generator-field pwa-generator-field--padded checkbox">
          <label class="pwa-generator-label">
            {{input type="checkbox" checked=worker.isSelected focus-out="updateModel" disabled=worker.isDisabled }}
            {{worker.name}}
          </label>
          
          <span class="pwa-generator-description">This simple but eligent solution pulls a file from your web server called "offline.html" (make sure that file is actually there) and 
            serves the file whenever a network connection can not be made.
          </span>
        </div>
      {{/each}}
      
      <div class="pwa-generator-buttons">
        {{#download-archive initialMessage="Download service worker" isBuilding=model.isBuilding.serviceWorker buildFailed=model.buildFailed.serviceWorker action="downloadServiceWorker" platform="serviceWorker" isEnabled=model.hasServiceWorkersSelected}}{{/download-archive}}
      </div>

      <p>You can also download the source code directly from <a class="pwa-generator-link" href="https://github.com/manifoldjs/serviceworkers" target="_blank">GitHub</a>.</p>
    </div>

    <div class="pure-u-1 pure-u-md-1-2 generator-section manifest manifest-holder">
      <header>
        <h2 class="pwa-generator-subtitle">Code for website</h2>
      </header>
      <div class="pwa-generator-code">
        {{formatted-manifest data=formattedServiceWorkerWebsiteCode}}
      </div>

      <header>
        <h2 class="pwa-generator-subtitle">Service worker code</h2>
      </header>
      <div class="pwa-generator-code">
        {{formatted-manifest data=formattedServiceWorkerCode}}
      </div>
    </div>
  </div>
  {{/generator-step}}

  {{#generator-step step="3" stepTitle="Publish PWA" showNextStep=false data=model action="updateStep" }}
  {{#if startComplete}}
    {{#if model.hasNoErrors}}
      <div class="publish-container">
        <h1>Publish PWA</h1>
        <div class="publish-header">
          <div>
            <h2>Web</h2>
            {{#download-archive class="button-holder download-archive" initialMessage="Download" isBuilding=model.isBuilding.web buildFailed=model.buildFailed.web action="buildArchive" platform="web" download="downloadArchive" archiveLink=model.archiveLink}}{{/download-archive}}
            <p>Download these files and add them to your website.  Different browsers will detect your Progressive Web App in different ways, but the manifest and service workers are required for each of them. </p>
          </div>
          <div>
            <h2>Windows</h2>
            {{#download-archive class="button-holder download-archive" initialMessage="Download" isBuilding=model.isBuilding.windows10 buildFailed=model.buildFailed.windows10 action="buildArchive" platform="windows10" download="downloadArchive" archiveLink=model.archiveLink}}{{/download-archive}}
            <p>Windows 10 PWA support is still in Beta, so some features like service workers will not work on all user machines.  We invite you to join our beta PWA program.  Your PWA can be created and app listing generated from the below one step publishing button.  <a href="#"> Learn more</a> about Windows 10 PWA advantages.</p>
            {{#publish-package class="button-holder download-archive" initialMessage="Publish 1-step" isBuilding=model.isBuilding.Win10Publish buildFailed=model.buildFailed.Win10Publish publishSuccedded=model.publishSuccedded action="publishWin10Package" publishName=model.name publishEmail=model.email}}{{/publish-package}}
            <p class="center"><a href="#">already have a windows 10 account?</a></p>
          </div>
          <div>
            <h2>Android</h2>
            {{#download-archive class="button-holder download-archive" initialMessage="Download" isBuilding=model.isBuilding.android buildFailed=model.buildFailed.android action="buildArchive" platform="android" download="downloadArchive" archiveLink=model.archiveLink}}{{/download-archive}}
            <p>PWAs are available through the browser on Android, however your PWA can also be submitted to the play store by submitting the package you get below.</p>
            {{#publish-package class="button-holder download-archive" initialMessage="Publish 1-step" isBuilding=model.isBuilding.Win10Publish buildFailed=model.buildFailed.Win10Publish publishSuccedded=model.publishSuccedded action="publishWin10Package" publishName=model.name publishEmail=model.email isEnabled=false }}{{/publish-package}}        
          </div>
        </div>
        <div class="publish-footer">
          <div>
            <h2>iOS Polyfill</h2>
            {{#download-archive class="button-holder download-archive" initialMessage="Download" isBuilding=model.isBuilding.ios buildFailed=model.buildFailed.ios action="buildArchive" platform="ios" download="downloadArchive" archiveLink=model.archiveLink}}{{/download-archive}}
          </div>
          <div>
            {{#download-archive class="button-holder download-archive download-primary" initialMessage="Download entire project" isBuilding=model.isBuilding.All buildFailed=model.buildFailed.All action="buildArchive" platform="All" download="downloadArchive" archiveLink=model.archiveLink}}{{/download-archive}}
          </div>
        </div>
      </div>
    {{else}}
      <p class="instructions">There are some validation errors in the manifest. Please fix them and try again.</p>
      <button class="button next-step" {{action "updateStep" "1"}}>Go to first step</button>
    {{/if}}  
  {{else}}
    <p class="instructions">You need to create your manifest first.</p>
    <button class="button next-step" {{action "updateStep" "1"}}>Go to first step</button>
  {{/if}}
  {{/generator-step}}
</ul>

{{#if startComplete}}
<div class="step">
  <div class="pwa-generator-buttons pwa-generator-buttons--centered">
      <button class="pwa-button pwa-button--simple" {{action "startOver"}}>Start Over</button>
    {{#if model.buildFailed}}
      <p class="pwa-generator-error">
        <h5>There were some errors while trying to build your project</h5>
        {{#each error in model.buildErrors}}
          {{#if error}}
            <p>{{error}}</p>
          {{/if}}
        {{/each}}
      </p>
    {{/if}}
  </div>
</div>
{{/if}}